AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    Default: local
    Description: The stage of the application (e.g., dev, prod)

  StocksApiUrl:
    Type: String
    Description: The URL of the stocks API

  StocksApiKeySecret:
    Type: String
    Description: The secret name for the stocks API key

  StocksApiKey:
    Type: String
    Description: The API key for the stocks API

  StocksPath:
    Type: String
    Default: /stocks
    Description: The path to the stocks API endpoint

Globals:
  Function:
    MemorySize: 1024
    LoggingConfig:
      LogFormat: JSON

Resources:

  ## DynamoDB Tables
  StocksTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: StocksTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: symbol
          AttributeType: S
      KeySchema:
        - AttributeName: symbol
          KeyType: HASH

  PortfolioTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: PortfolioTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH

  UsersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: UsersTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: email
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: email-index
          KeySchema:
            - AttributeName: email
              KeyType: HASH
          Projection:
            ProjectionType: ALL

  TransactionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TransactionsTable
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
        - AttributeName: createdAt
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: createdAt
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: status-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: createdAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  ## Functions
  GetStocksFunction:
    Type: AWS::Serverless::Function 
    Connectors:
      StocksTableConnection:
        Properties:
          Destination:
            Id: StocksTable
          Permissions:
            - Read
            - Write
    Properties:
      CodeUri: apps/get-stocks
      Handler: src/index.handler
      Runtime: nodejs22.x
      Timeout: 300
      Architectures:
        - x86_64
      Tracing: Active
      Environment:
        Variables:
          STAGE: !Ref Stage
          STOCKS_API_URL: !Ref StocksApiUrl
          STOCKS_API_KEY_SECRET: !Ref StocksApiKeySecret
          STOCKS_API_KEY: !Ref StocksApiKey
          STOCKS_PATH: !Ref StocksPath
          STOCKS_TABLE: !Ref StocksTable
          LOG_LEVEL: INFO
      Events:
        ScheduledEvent:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: rate(5 minutes)
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - secretsmanager:GetSecretValue
              Resource: !Sub arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:${StocksApiKeySecret}
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2023
        Sourcemap: true 
        EntryPoints:
        - src/index.ts

Outputs:
  GetStocksFunction:
    Description: "Get Stocks Function ARN"
    Value: !GetAtt GetStocksFunction.Arn
  StocksTable:
    Description: "Stocks Table Name"
    Value: !Ref StocksTable